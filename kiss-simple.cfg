logging = {
	file="myip.log";
	level_file="debug";
	level_screen="debug";
}

environment = {
	chdir-path="/tmp"
	run-as=0
	run-in=0

	ifup="/home/folkert/Projects/myip/go.sh"
	#ifdown=

	stats-socket="/tmp/myipstats.sock";

	n-router-threads=4;
}

interfaces = (
{
	# either slip, ppp, udp, promiscuous (for existing interfaces), kiss (IP(v4)
	# over AX.25) or tap
        type="kiss"

        # this is usually for a direwolf pts (give -p to direwolf)
        descriptor="pty-client:/dev/pts/12"

	# for kiss:
	#  pty-master:dev-file          create a PTY to which kissattach can connect (TNC mode)
	#  pty-client:dev-file          open an existing PTY (TNC client mode)
	#  tty:dev-file:baudrate        open a serial port on which a TNC listens
	#  tcp-client:host:port         connect to a KISS over TCP server
	#  tcp-server:listen-addr:port  listens for a KISS over TCP client

	beacon="Hallo, dit is een test.";
	beacon-interval=120;

        baudrate=19200

	upstream-dns = "8.8.8.8";

        ipv4 = {
                my-address="192.168.32.19";

                use-icmp=true;
                use-tcp=true;
                use-udp=true;
                use-sctp=true;
		n-icmp-threads=4;
		n-sctp-threads=4;
		n-tcp-threads=4;
		n-udp-threads=4;
        }

        mac-address="PD9FVH-5";

	routes = ( {  # this interface is the default
			ip-family = "ipv4";
			network = "0.0.0.0";
			netmask = "0.0.0.0";
			gateway = "192.168.32.19";
		},
		{
			ip-family = "ipv4";
			network = "192.168.32.0";
			netmask = "255.255.255.0";
		})
}
)

ntp = {
	upstream-ip-address="192.168.64.1";
	port=123;
	broadcast=true;
}
